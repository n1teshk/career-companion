name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  RAILS_ENV: test
  POSTGRES_PASSWORD: postgres

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: career_companion_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.5
        bundler-cache: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client libpq-dev
        bundle install --jobs 4 --retry 3

    - name: Setup test database
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/career_companion_test
      run: |
        bin/rails db:create RAILS_ENV=test
        bin/rails db:schema:load RAILS_ENV=test

    - name: Run tests with coverage
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/career_companion_test
      run: |
        bin/rails test

    - name: Check coverage threshold
      run: |
        if [ -f coverage/.last_run.json ]; then
          coverage=$(grep -o '"line":[0-9.]*' coverage/.last_run.json | cut -d':' -f2)
          echo "Coverage: ${coverage}%"
          if (( $(echo "$coverage < 30" | bc -l) )); then
            echo "❌ Coverage ${coverage}% is below minimum threshold of 30%"
            exit 1
          else
            echo "✅ Coverage ${coverage}% meets minimum threshold"
          fi
        fi

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.5
        bundler-cache: true

    - name: Run RuboCop
      run: bundle exec rubocop --parallel

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.5
        bundler-cache: true

    - name: Run Brakeman
      run: bundle exec brakeman --quiet

    - name: Run bundle audit
      run: bundle exec bundle audit --update